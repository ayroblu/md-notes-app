name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]

    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v3

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}

    # https://github.com/actions/cache/blob/main/examples.md#node---yarn
    - name: Get yarn cache directory path
      id: yarn-cache-dir-path
      #run: echo "::set-output name=dir::$(yarn cache dir)"
      run: echo "dir=$(yarn cache dir)" >> ${GITHUB_OUTPUT}

    - uses: actions/cache@v1
      # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
      id: yarn-cache
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-
    - name: Grab dependencies
      run: yarn --frozen-lockfile

    - name: Lint
      run: yarn lint

    - name: Build
      run: yarn build

    - name: Deploy
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./dist
